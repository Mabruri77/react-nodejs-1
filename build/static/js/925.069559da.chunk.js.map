{"version":3,"file":"static/js/925.069559da.chunk.js","mappings":"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","sources":["places/pages/UpdatePlace.js","shared/hooks/http-hooks.js"],"sourcesContent":["import React, { useContext } from \"react\"\nimport Button from \"@mui/material/Button\"\nimport TextField from \"@mui/material/TextField\"\nimport Box from \"@mui/material/Box\"\nimport Typography from \"@mui/material/Typography\"\nimport Container from \"@mui/material/Container\"\nimport { Alert, AlertTitle, Card } from \"@mui/material\"\nimport { useNavigate, useParams } from \"react-router-dom\"\nimport { useHttpClient } from \"../../shared/hooks/http-hooks\"\nimport { AuthContext } from \"../../shared/context/auth-context\"\n\nexport default function EditPlace() {\n  const { placeId } = useParams()\n  const navigate = useNavigate()\n  const { sendRequest, error } = useHttpClient()\n  const auth = useContext(AuthContext)\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    const data = new FormData(event.currentTarget)\n\n    const body = {\n      title: data.get(\"title\"),\n      description: data.get(\"description\"),\n    }\n    try {\n      await sendRequest(`https://cute-plum-cobra.cyclic.app/api/places/${placeId}`, \"patch\", body, {\n        Authorization: `Bearer ${auth.token}`,\n      })\n      navigate(`/${auth.userId}/places`)\n    } catch (err) {}\n  }\n\n  return (\n    <>\n      {error && (\n        <Container sx={{ my: 4, display: \"flex\", justifyContent: \"center\" }}>\n          <Alert severity=\"error\" variant=\"filled\" sx={{ width: \"40%\" }}>\n            <AlertTitle>Error</AlertTitle>\n            {error} â€” <strong>check it out!</strong>\n          </Alert>\n        </Container>\n      )}\n      <Container component=\"main\" maxWidth=\"sm\">\n        <Card\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            flexDirection: \"column\",\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h4\" fontWeight=\"bold\">\n            Update Place\n          </Typography>\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ width: \"80%\" }}>\n            <Typography variant=\"body1\" fontWeight=\"bold\">\n              Title\n            </Typography>\n            <TextField margin=\"normal\" required fullWidth id=\"title\" name=\"title\" />\n\n            <Typography variant=\"body1\" fontWeight=\"bold\">\n              description\n            </Typography>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"description\"\n              id=\"description\"\n              multiline\n              rows={4}\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2, bgcolor: \"orange\" }}\n            >\n              Save\n            </Button>\n          </Box>\n        </Card>\n      </Container>\n    </>\n  )\n}\n","import axios from \"axios\"\nimport { useCallback, useState } from \"react\"\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [error, setError] = useState()\n\n  const sendRequest = useCallback(async (url, method = \"get\", body = {}, head = {}) => {\n    try {\n      const response = await axios({ method, url, data: body, headers: head })\n      return response.data\n    } catch (err) {\n      var data = err.response ? err.response.data.message : err.message\n      setError(data)\n      setIsLoading(false)\n      throw err\n    }\n  }, [])\n\n  return { isLoading, error, sendRequest, setIsLoading, setError }\n}\n"],"names":["EditPlace","placeId","useParams","navigate","useNavigate","_useHttpClient","useHttpClient","sendRequest","error","auth","useContext","AuthContext","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","data","body","wrap","_context","prev","next","preventDefault","FormData","currentTarget","title","get","description","concat","Authorization","token","userId","t0","stop","_x","apply","arguments","_jsxs","_Fragment","children","_jsx","Container","sx","my","display","justifyContent","Alert","severity","variant","width","AlertTitle","component","maxWidth","Card","alignItems","flexDirection","Typography","fontWeight","Box","onSubmit","noValidate","TextField","margin","required","fullWidth","id","name","multiline","rows","Button","type","mt","mb","bgcolor","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","setError","useCallback","url","method","head","response","_args","length","undefined","axios","headers","sent","abrupt","message"],"sourceRoot":""}