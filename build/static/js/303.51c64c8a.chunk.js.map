{"version":3,"file":"static/js/303.51c64c8a.chunk.js","mappings":"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","sources":["shared/hooks/http-hooks.js","shared/validationTextField.js","../node_modules/@mui/icons-material/esm/CameraAlt.js","user/pages/userRegister.js"],"sourcesContent":["import axios from \"axios\"\nimport { useCallback, useState } from \"react\"\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [error, setError] = useState()\n\n  const sendRequest = useCallback(async (url, method = \"get\", body = {}, head = {}) => {\n    try {\n      const response = await axios({ method, url, data: body, headers: head })\n      return response.data\n    } catch (err) {\n      var data = err.response ? err.response.data.message : err.message\n      setError(data)\n      setIsLoading(false)\n      throw err\n    }\n  }, [])\n\n  return { isLoading, error, sendRequest, setIsLoading, setError }\n}\n","export const validationLogin = (email, password) => {\n  let val = {\n    email: {\n      error: false,\n      message: \"\",\n    },\n    password: {\n      error: false,\n      message: \"\",\n    },\n  }\n\n  if (!email) {\n    val.email.error = true\n    val.email.message = \"email must not empty\"\n  } else if (!email.includes(\"@\")) {\n    val.email.error = true\n    val.email.message = \"please use valid email\"\n  }\n  if (!password) {\n    val.password.error = true\n    val.password.message = \"password must not empty\"\n  } else if (password.length < 6) {\n    val.password.error = true\n    val.password.message = \"min character length 6\"\n  }\n\n  if (!val.email.error && !val.email.password) {\n    val = {\n      email: {\n        error: false,\n        message: \"\",\n      },\n      password: {\n        error: false,\n        message: \"\",\n      },\n    }\n  }\n  return { updatedValue: val, errorValidate: val.email.error || val.password.error }\n}\nexport const validationTexfieldAddPlace = (title, address, description, image) => {\n  let val = {\n    title: {\n      error: false,\n      message: \"\",\n    },\n    address: {\n      error: false,\n      message: \"\",\n    },\n    description: {\n      error: false,\n      message: \"\",\n    },\n    image: {\n      error: false,\n      message: \"\",\n    },\n  }\n\n  if (!title) {\n    val.title.error = true\n    val.title.message = \"title must not empty\"\n  }\n  if (!description) {\n    val.description.error = true\n    val.description.message = \"description must not empty\"\n  } else if (description.length < 10) {\n    console.log(description)\n    val.description.error = true\n    val.description.message = \"min character length 10\"\n  }\n  if (!address) {\n    val.address.error = true\n    val.address.message = \"address must not empty\"\n  }\n  if (!image) {\n    val.image.error = true\n    val.image.message = \"image must filled\"\n  }\n\n  if (!val.title.error && !val.description.error && !val.address.error) {\n    val = {\n      title: {\n        error: false,\n        message: \"\",\n      },\n      address: {\n        error: false,\n        message: \"\",\n      },\n      description: {\n        error: false,\n        message: \"\",\n      },\n      image: {\n        error: false,\n        message: \"\",\n      },\n    }\n  }\n  return {\n    updatedValue: val,\n    errorValidate: val.address.error || val.title.error || val.description.error,\n  }\n}\n\nexport const validationRegister = (name, email, password, confirmPassword, image) => {\n  let val = {\n    email: {\n      error: false,\n      message: \"\",\n    },\n    password: {\n      error: false,\n      message: \"\",\n    },\n    name: {\n      error: false,\n      message: \"\",\n    },\n    confirmPassword: {\n      error: false,\n      message: \"\",\n    },\n    image: {\n      error: false,\n      message: \"\",\n    },\n  }\n  if (!email) {\n    val.email.error = true\n    val.email.message = \"email must not empty\"\n  } else if (!email.includes(\"@\")) {\n    val.email.error = true\n    val.email.message = \"please use valid email\"\n  }\n  if (!name) {\n    val.name.error = true\n    val.name.message = \"name must not empty\"\n  }\n  if (!confirmPassword) {\n    val.confirmPassword.error = true\n    val.confirmPassword.message = \"confirm password must not empty\"\n  } else if (confirmPassword !== password) {\n    val.confirmPassword.error = true\n    val.confirmPassword.message = \"confirm password does not match\"\n  }\n\n  if (!password) {\n    val.password.error = true\n    val.password.message = \"password must not empty\"\n  } else if (password.length < 6) {\n    val.password.error = true\n    val.password.message = \"min character length 6\"\n  }\n\n  if (!image) {\n    val.image.error = true\n    val.image.message = \"image must Filled\"\n  }\n\n  if (!val.name.error && !val.email.error && !val.password.error && !val.confirmPassword.error) {\n    val = {\n      email: {\n        error: false,\n        message: \"\",\n      },\n      password: {\n        error: false,\n        message: \"\",\n      },\n      name: {\n        error: false,\n        message: \"\",\n      },\n      confirmPassword: {\n        error: false,\n        message: \"\",\n      },\n      image: {\n        error: false,\n        message: \"\",\n      },\n    }\n  }\n  return {\n    updatedValue: val,\n    errorValidate:\n      val.email.error || val.password.error || val.name.error || val.confirmPassword.error,\n  }\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"3.2\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 2 7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"\n}, \"1\")], 'CameraAlt');","import React, { useState } from \"react\"\nimport Avatar from \"@mui/material/Avatar\"\nimport Button from \"@mui/material/Button\"\nimport TextField from \"@mui/material/TextField\"\nimport Grid from \"@mui/material/Grid\"\nimport Box from \"@mui/material/Box\"\nimport Typography from \"@mui/material/Typography\"\nimport { CameraAlt } from \"@mui/icons-material\"\nimport Container from \"@mui/material/Container\"\nimport { Alert, AlertTitle, Card } from \"@mui/material\"\nimport { Link, useNavigate } from \"react-router-dom\"\nimport { useHttpClient } from \"../../shared/hooks/http-hooks\"\nimport { validationRegister } from \"../../shared/validationTextField\"\n\nexport default function SignUp() {\n  const [validation, setValidation] = useState({\n    email: {\n      error: false,\n      message: \"\",\n    },\n    password: {\n      error: false,\n      message: \"\",\n    },\n    name: {\n      error: false,\n      message: \"\",\n    },\n    confirmPassword: {\n      error: false,\n      message: \"\",\n    },\n  })\n  const [imageFile, setImageFile] = useState()\n  const navigate = useNavigate()\n  const { sendRequest, error, setError } = useHttpClient()\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    const data = new FormData(event.currentTarget)\n    const body = {\n      name: data.get(\"name\"),\n      email: data.get(\"email\"),\n      password: data.get(\"password\"),\n      confirmPassword: data.get(\"confirmPassword\"),\n    }\n    const { updatedValue, errorValidate } = validationRegister(\n      body.name,\n      body.email,\n      body.password,\n      body.confirmPassword,\n      data.get(\"image\")\n    )\n    if (errorValidate) {\n      setError(\"something wrong please check your image\")\n      setValidation(updatedValue)\n    } else {\n      try {\n        await sendRequest(\"https://cute-plum-cobra.cyclic.app/api/users/register\", \"post\", data)\n        navigate(\"/login\")\n      } catch (err) {}\n    }\n  }\n\n  const pickFileHandler = () => {\n    document.getElementById(\"image\").click()\n  }\n\n  const readImageFile = (event) => {\n    const file = event.target.files[0]\n    const reader = new FileReader()\n    reader.onload = () => {\n      setImageFile(reader.result)\n    }\n    reader.readAsDataURL(file)\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      {error && (\n        <Container sx={{ my: 4, display: \"flex\", justifyContent: \"center\" }}>\n          <Alert severity=\"error\" variant=\"filled\" sx={{ width: \"100%\" }}>\n            <AlertTitle>Error</AlertTitle>\n            {error} — <strong>check it out!</strong>\n          </Alert>\n        </Container>\n      )}\n      <Card\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign Up\n        </Typography>\n        {imageFile && (\n          <Avatar sx={{ m: 1, width: 100, height: 100, background: \"orange\" }} src={imageFile} />\n        )}\n\n        <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ m: 1 }}>\n          <TextField\n            error={validation.name.error}\n            helperText={validation.name.message}\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"Name\"\n            name=\"name\"\n            autoComplete=\"name\"\n          />\n          <TextField\n            error={validation.email.error}\n            helperText={validation.email.message}\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n          />\n          <TextField\n            error={validation.password.error}\n            helperText={validation.password.message}\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <TextField\n            error={validation.confirmPassword.error}\n            helperText={validation.confirmPassword.message}\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"confirmPassword\"\n            label=\"Confirm Password\"\n            type=\"password\"\n            id=\"confirmPassword\"\n          />\n\n          <Button type=\"button\" variant=\"contained\" sx={{ mt: 3, mb: 2 }} onClick={pickFileHandler}>\n            Upload <CameraAlt sx={{ ml: 1 }} />\n          </Button>\n          <TextField\n            type=\"file\"\n            id=\"image\"\n            name=\"image\"\n            onChange={readImageFile}\n            sx={{ display: \"none\" }}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2, bgcolor: \"orange\" }}\n          >\n            Sign Up\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Link to=\"/login\" style={{ textDecoration: \"none\" }}>\n                <Typography variant=\"body2\" color=\"orange\" fontWeight=\"medium\">\n                  Already have an account? Sign In\n                </Typography>\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Card>\n    </Container>\n  )\n}\n"],"names":["useHttpClient","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","sendRequest","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","head","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","axios","headers","sent","abrupt","t0","message","stop","_x","apply","validationLogin","email","password","val","includes","updatedValue","errorValidate","validationTexfieldAddPlace","title","address","description","image","console","log","validationRegister","name","confirmPassword","createSvgIcon","_jsx","cx","cy","r","d","SignUp","validation","setValidation","imageFile","setImageFile","navigate","useNavigate","_useHttpClient","handleSubmit","event","_validationRegister","preventDefault","FormData","currentTarget","get","_jsxs","Container","component","maxWidth","children","sx","my","display","justifyContent","Alert","severity","variant","width","AlertTitle","Card","alignItems","flexDirection","Typography","Avatar","m","height","background","src","Box","onSubmit","noValidate","TextField","helperText","margin","required","fullWidth","id","label","autoComplete","type","Button","mt","mb","onClick","document","getElementById","click","CameraAlt","ml","onChange","file","target","files","reader","FileReader","onload","result","readAsDataURL","bgcolor","Grid","container","item","Link","to","style","textDecoration","color","fontWeight"],"sourceRoot":""}